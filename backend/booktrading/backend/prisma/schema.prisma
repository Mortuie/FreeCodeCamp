datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Status {
  INCOMPLETE
  COMPLETE
}

model Users {
  id Int @id @default(autoincrement())
  username String @unique
  password String
  image String
  createdAt DateTime @default(now())
  books Books[]
  recievedTrades Trades[] @relation("toUser")
  madeTrades Trades[] @relation("fromUser")  
  sessions Sessions[] @relation("user")
}

model Books {
  id Int @id @default(autoincrement())
  title String @db.VarChar(50)
  description String @default("")
  user Users @relation(fields: [userId], references: [id])
  userId Int 
  toBook Trades[] @relation("toBook")
  fromBook Trades[] @relation("fromBook")
  createdAt DateTime @default(now())
  image String 
}

model Trades {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  message String @default("")
  fromUser Users @relation("fromUser", fields: [fromUserId], references: [id])
  fromUserId Int 
  fromBook Books @relation("fromBook", fields: [fromBookId], references: [id])
  fromBookId Int
  toBookId Int
  toBook Books @relation("toBook", fields: [toBookId], references: [id])
  toUserId Int
  toUser Users @relation("toUser", fields: [toUserId], references: [id])
  status Status @default(INCOMPLETE)
}

model Sessions {
  cookieUuid String @unique
  userId Int
  user Users @relation("user", fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}